generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["config", "data", "friend", "guild", "public"]
}

model Account {
  Id                    String                  @id(map: "PK_Account") @db.Uuid
  VaultId               String?                 @unique(map: "IX_Account_VaultId") @db.Uuid
  LoginName             String                  @unique(map: "IX_Account_LoginName") @db.VarChar(10)
  PasswordHash          String
  SecurityCode          String
  EMail                 String
  RegistrationDate      DateTime                @db.Timestamptz(6)
  State                 Int
  TimeZone              Int                     @db.SmallInt
  VaultPassword         String
  IsVaultExtended       Boolean
  ChatBanUntil          DateTime?               @db.Timestamptz(6)
  ItemStorage           ItemStorage?            @relation(fields: [VaultId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Account_ItemStorage_VaultId")
  AccountCharacterClass AccountCharacterClass[]
  Character             Character[]
  StatAttribute         StatAttribute[]

  @@schema("data")
}

model AccountCharacterClass {
  AccountId        String  @db.Uuid
  CharacterClassId String  @db.Uuid
  Account          Account @relation(fields: [AccountId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_AccountCharacterClass_Account_AccountId")

  @@id([AccountId, CharacterClassId], map: "PK_AccountCharacterClass")
  @@index([CharacterClassId], map: "IX_AccountCharacterClass_CharacterClassId")
  @@schema("data")
}

model AppearanceData {
  Id                     String           @id(map: "PK_AppearanceData") @db.Uuid
  CharacterClassId       String?          @db.Uuid
  Pose                   Int              @db.SmallInt
  FullAncientSetEquipped Boolean
  ItemAppearance         ItemAppearance[]
  LetterBody             LetterBody?

  @@index([CharacterClassId], map: "IX_AppearanceData_CharacterClassId")
  @@schema("data")
}

model Character {
  Id                     String                   @id(map: "PK_Character") @db.Uuid
  CharacterClassId       String                   @db.Uuid
  CurrentMapId           String?                  @db.Uuid
  InventoryId            String?                  @unique(map: "IX_Character_InventoryId") @db.Uuid
  AccountId              String?                  @db.Uuid
  Name                   String                   @unique(map: "IX_Character_Name") @db.VarChar(10)
  CharacterSlot          Int                      @db.SmallInt
  CreateDate             DateTime                 @db.Timestamptz(6)
  Experience             BigInt
  MasterExperience       BigInt
  LevelUpPoints          Int
  MasterLevelUpPoints    Int
  PositionX              Int                      @db.SmallInt
  PositionY              Int                      @db.SmallInt
  PlayerKillCount        Int
  StateRemainingSeconds  Int
  State                  Int
  CharacterStatus        Int
  Pose                   Int                      @db.SmallInt
  UsedFruitPoints        Int
  UsedNegFruitPoints     Int
  InventoryExtensions    Int
  KeyConfiguration       Bytes?
  MuHelperConfiguration  Bytes?
  Account                Account?                 @relation(fields: [AccountId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Character_Account_AccountId")
  ItemStorage            ItemStorage?             @relation(fields: [InventoryId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Character_ItemStorage_InventoryId")
  CharacterDropItemGroup CharacterDropItemGroup[]
  CharacterQuestState    CharacterQuestState[]
  LetterHeader           LetterHeader[]
  MiniGameRankingEntry   MiniGameRankingEntry[]
  SkillEntry             SkillEntry[]
  StatAttribute          StatAttribute[]
  GuildMember            GuildMember?

  @@index([AccountId], map: "IX_Character_AccountId")
  @@index([CharacterClassId], map: "IX_Character_CharacterClassId")
  @@index([CurrentMapId], map: "IX_Character_CurrentMapId")
  @@schema("data")
}

model CharacterDropItemGroup {
  CharacterId     String    @db.Uuid
  DropItemGroupId String    @db.Uuid
  Character       Character @relation(fields: [CharacterId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_CharacterDropItemGroup_Character_CharacterId")

  @@id([CharacterId, DropItemGroupId], map: "PK_CharacterDropItemGroup")
  @@index([DropItemGroupId], map: "IX_CharacterDropItemGroup_DropItemGroupId")
  @@schema("data")
}

model CharacterQuestState {
  Id                               String                             @id(map: "PK_CharacterQuestState") @db.Uuid
  LastFinishedQuestId              String?                            @db.Uuid
  ActiveQuestId                    String?                            @db.Uuid
  CharacterId                      String?                            @db.Uuid
  Group                            Int                                @db.SmallInt
  ClientActionPerformed            Boolean
  Character                        Character?                         @relation(fields: [CharacterId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_CharacterQuestState_Character_CharacterId")
  QuestMonsterKillRequirementState QuestMonsterKillRequirementState[]

  @@index([ActiveQuestId], map: "IX_CharacterQuestState_ActiveQuestId")
  @@index([CharacterId], map: "IX_CharacterQuestState_CharacterId")
  @@index([LastFinishedQuestId], map: "IX_CharacterQuestState_LastFinishedQuestId")
  @@schema("data")
}

model Item {
  Id                String              @id(map: "PK_Item") @db.Uuid
  ItemStorageId     String?             @db.Uuid
  DefinitionId      String?             @db.Uuid
  ItemSlot          Int                 @db.SmallInt
  Durability        Float
  Level             Int                 @db.SmallInt
  HasSkill          Boolean
  SocketCount       Int
  StorePrice        Int?
  PetExperience     Int                 @default(0)
  ItemStorage       ItemStorage?        @relation(fields: [ItemStorageId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Item_ItemStorage_ItemStorageId")
  ItemItemOfItemSet ItemItemOfItemSet[]
  ItemOptionLink    ItemOptionLink[]

  @@index([DefinitionId], map: "IX_Item_DefinitionId")
  @@index([ItemStorageId], map: "IX_Item_ItemStorageId")
  @@schema("data")
}

model ItemAppearance {
  Id                           String                         @id(map: "PK_ItemAppearance") @db.Uuid
  DefinitionId                 String?                        @db.Uuid
  AppearanceDataId             String?                        @db.Uuid
  ItemSlot                     Int                            @db.SmallInt
  Level                        Int                            @db.SmallInt
  AppearanceData               AppearanceData?                @relation(fields: [AppearanceDataId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ItemAppearance_AppearanceData_AppearanceDataId")
  ItemAppearanceItemOptionType ItemAppearanceItemOptionType[]

  @@index([AppearanceDataId], map: "IX_ItemAppearance_AppearanceDataId")
  @@index([DefinitionId], map: "IX_ItemAppearance_DefinitionId")
  @@schema("data")
}

model ItemAppearanceItemOptionType {
  ItemAppearanceId String         @db.Uuid
  ItemOptionTypeId String         @db.Uuid
  ItemAppearance   ItemAppearance @relation(fields: [ItemAppearanceId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ItemAppearanceItemOptionType_ItemAppearance_ItemAppearanceId")

  @@id([ItemAppearanceId, ItemOptionTypeId], map: "PK_ItemAppearanceItemOptionType")
  @@index([ItemOptionTypeId], map: "IX_ItemAppearanceItemOptionType_ItemOptionTypeId")
  @@schema("data")
}

model ItemItemOfItemSet {
  ItemId          String @db.Uuid
  ItemOfItemSetId String @db.Uuid
  Item            Item   @relation(fields: [ItemId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ItemItemOfItemSet_Item_ItemId")

  @@id([ItemId, ItemOfItemSetId], map: "PK_ItemItemOfItemSet")
  @@index([ItemOfItemSetId], map: "IX_ItemItemOfItemSet_ItemOfItemSetId")
  @@schema("data")
}

model ItemOptionLink {
  Id           String  @id(map: "PK_ItemOptionLink") @db.Uuid
  ItemOptionId String? @db.Uuid
  ItemId       String? @db.Uuid
  Level        Int
  Index        Int
  Item         Item?   @relation(fields: [ItemId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ItemOptionLink_Item_ItemId")

  @@index([ItemId], map: "IX_ItemOptionLink_ItemId")
  @@index([ItemOptionId], map: "IX_ItemOptionLink_ItemOptionId")
  @@schema("data")
}

model ItemStorage {
  Id        String     @id(map: "PK_ItemStorage") @db.Uuid
  Money     Int
  Account   Account?
  Character Character?
  Item      Item[]

  @@schema("data")
}

model LetterBody {
  Id                 String          @id(map: "PK_LetterBody") @db.Uuid
  HeaderId           String?         @db.Uuid
  SenderAppearanceId String?         @unique(map: "IX_LetterBody_SenderAppearanceId") @db.Uuid
  Message            String
  Rotation           Int             @db.SmallInt
  Animation          Int             @db.SmallInt
  AppearanceData     AppearanceData? @relation(fields: [SenderAppearanceId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_LetterBody_AppearanceData_SenderAppearanceId")
  LetterHeader       LetterHeader?   @relation(fields: [HeaderId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_LetterBody_LetterHeader_HeaderId")

  @@index([HeaderId], map: "IX_LetterBody_HeaderId")
  @@schema("data")
}

model LetterHeader {
  Id          String       @id(map: "PK_LetterHeader") @db.Uuid
  ReceiverId  String       @db.Uuid
  SenderName  String?
  Subject     String?
  LetterDate  DateTime     @db.Timestamptz(6)
  ReadFlag    Boolean
  CharacterId String       @default(dbgenerated("'00000000-0000-0000-0000-000000000000'::uuid")) @db.Uuid
  LetterBody  LetterBody[]
  Character   Character    @relation(fields: [ReceiverId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_LetterHeader_Character_ReceiverId")

  @@index([ReceiverId], map: "IX_LetterHeader_ReceiverId")
  @@schema("data")
}

model MiniGameRankingEntry {
  Id             String     @id(map: "PK_MiniGameRankingEntry") @db.Uuid
  CharacterId    String?    @db.Uuid
  MiniGameId     String?    @db.Uuid
  GameInstanceId String     @db.Uuid
  Timestamp      DateTime?  @db.Timestamptz(6)
  Score          Int
  Rank           Int
  Character      Character? @relation(fields: [CharacterId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_MiniGameRankingEntry_Character_CharacterId")

  @@index([CharacterId], map: "IX_MiniGameRankingEntry_CharacterId")
  @@index([MiniGameId], map: "IX_MiniGameRankingEntry_MiniGameId")
  @@schema("data")
}

model QuestMonsterKillRequirementState {
  Id                    String               @id(map: "PK_QuestMonsterKillRequirementState") @db.Uuid
  RequirementId         String?              @db.Uuid
  CharacterQuestStateId String?              @db.Uuid
  KillCount             Int
  CharacterQuestState   CharacterQuestState? @relation(fields: [CharacterQuestStateId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_QuestMonsterKillRequirementState_CharacterQuestState_Charac~")

  @@index([CharacterQuestStateId], map: "IX_QuestMonsterKillRequirementState_CharacterQuestStateId")
  @@index([RequirementId], map: "IX_QuestMonsterKillRequirementState_RequirementId")
  @@schema("data")
}

model SkillEntry {
  Id          String     @id(map: "PK_SkillEntry") @db.Uuid
  SkillId     String?    @db.Uuid
  CharacterId String?    @db.Uuid
  Level       Int
  Character   Character? @relation(fields: [CharacterId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_SkillEntry_Character_CharacterId")

  @@index([CharacterId], map: "IX_SkillEntry_CharacterId")
  @@index([SkillId], map: "IX_SkillEntry_SkillId")
  @@schema("data")
}

model StatAttribute {
  Id           String     @id(map: "PK_StatAttribute") @db.Uuid
  DefinitionId String?    @db.Uuid
  CharacterId  String?    @db.Uuid
  Value        Float      @db.Real
  AccountId    String?    @db.Uuid
  Account      Account?   @relation(fields: [AccountId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_StatAttribute_Account_AccountId")
  Character    Character? @relation(fields: [CharacterId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_StatAttribute_Character_CharacterId")

  @@index([AccountId], map: "IX_StatAttribute_AccountId")
  @@index([CharacterId], map: "IX_StatAttribute_CharacterId")
  @@index([DefinitionId], map: "IX_StatAttribute_DefinitionId")
  @@schema("data")
}

model Guild {
  Id                                       String        @id(map: "PK_Guild") @db.Uuid
  HostilityId                              String?       @db.Uuid
  AllianceGuildId                          String?       @db.Uuid
  Name                                     String        @unique(map: "IX_Guild_Name") @db.VarChar(8)
  Logo                                     Bytes?
  Score                                    Int
  Notice                                   String?
  Guild_Guild_AllianceGuildIdToGuild       Guild?        @relation("Guild_AllianceGuildIdToGuild", fields: [AllianceGuildId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Guild_Guild_AllianceGuildId")
  other_Guild_Guild_AllianceGuildIdToGuild Guild[]       @relation("Guild_AllianceGuildIdToGuild")
  Guild_Guild_HostilityIdToGuild           Guild?        @relation("Guild_HostilityIdToGuild", fields: [HostilityId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Guild_Guild_HostilityId")
  other_Guild_Guild_HostilityIdToGuild     Guild[]       @relation("Guild_HostilityIdToGuild")
  GuildMember                              GuildMember[]

  @@index([AllianceGuildId], map: "IX_Guild_AllianceGuildId")
  @@index([HostilityId], map: "IX_Guild_HostilityId")
  @@schema("guild")
}

model GuildMember {
  Id        String    @id(map: "PK_GuildMember") @db.Uuid
  GuildId   String    @db.Uuid
  Status    Int       @db.SmallInt
  Character Character @relation(fields: [Id], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_GuildMember_Character_Id")
  Guild     Guild     @relation(fields: [GuildId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_GuildMember_Guild_GuildId")

  @@index([GuildId], map: "IX_GuildMember_GuildId")
  @@schema("guild")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model AreaSkillSettings {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model AttributeDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model AttributeRelationship {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model AttributeRequirement {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model BattleZoneDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model CharacterClass {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ChatServerDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ChatServerEndpoint {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model CombinationBonusRequirement {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ConfigurationUpdate {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ConfigurationUpdateState {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ConnectServerDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ConstValueAttribute {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model DropItemGroup {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model DropItemGroupItemDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model DuelArea {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model DuelConfiguration {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model EnterGate {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ExitGate {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model GameClientDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model GameConfiguration {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model GameMapDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model GameMapDefinitionDropItemGroup {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model GameServerConfiguration {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model GameServerConfigurationGameMapDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model GameServerDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model GameServerEndpoint {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model IncreasableItemOption {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemBasePowerUpDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemCrafting {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemCraftingRequiredItem {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemCraftingRequiredItemItemDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemCraftingRequiredItemItemOptionType {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemCraftingResultItem {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemDefinitionCharacterClass {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemDefinitionItemOptionDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemDefinitionItemSetGroup {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemDropItemGroup {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemDropItemGroupItemDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemLevelBonusTable {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemOfItemSet {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemOption {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemOptionCombinationBonus {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemOptionDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemOptionOfLevel {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemOptionType {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemSetGroup {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ItemSlotType {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model JewelMix {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model LevelBonus {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MagicEffectDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MasterSkillDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MasterSkillDefinitionSkill {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MasterSkillRoot {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MiniGameChangeEvent {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MiniGameDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MiniGameReward {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MiniGameSpawnWave {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MiniGameTerrainChange {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MonsterAttribute {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MonsterDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MonsterDefinitionDropItemGroup {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model MonsterSpawnArea {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model PlugInConfiguration {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model PowerUpDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model PowerUpDefinitionValue {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model QuestDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model QuestItemRequirement {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model QuestMonsterKillRequirement {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model QuestReward {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model Rectangle {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model SimpleCraftingSettings {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model Skill {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model SkillCharacterClass {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model SkillComboDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model SkillComboStep {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model StatAttributeDefinition {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model SystemConfiguration {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model WarpInfo {
// @@schema("config")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model Friend {
// @@schema("friend")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model EFMigrationsHistory {
// @@map("__EFMigrationsHistory")
// @@schema("public")
// }

model openMuWeb_News {
  id           String   @id @default(uuid())
  title        String
  body         String
  author       String
  creationDate DateTime @default(now())

  @@schema("public")
}
